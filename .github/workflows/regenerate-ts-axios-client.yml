# .github/workflows/regenerate-ts-axios-client.yml
name: Regenerate TypeScript-Axios Client

on:
  schedule:
    - cron: '*/3 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-and-push:
    runs-on: ubuntu-latest
    steps:

      # 1. Checkout this workflow repo (to get this file and for any pushes back)
      - name: Checkout origin repo
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      # 2. Download your live OpenAPI spec
      - name: Download OpenAPI spec
        run: |
          curl -sSL "${{ secrets.SPEC_URL }}" -o spec.yaml

      # 3. Upload the raw spec as an artifact (so you can inspect it un-masked)
      - name: Upload raw spec artifact
        uses: actions/upload-artifact@v3
        with:
          name: openapi-spec
          path: spec.yaml

      # 4. Patch the invalid scheme name in-place
      - name: Rename security scheme to valid key
        run: |
          sed -i 's/Bearer Authentication/BearerAuth/g' spec.yaml

      # 5. Install OpenAPI Generator CLI
      - name: Install OpenAPI Generator CLI
        run: |
          npm install @openapitools/openapi-generator-cli -g

      # 6. (Optional) Validate spec — will pass now that we patched the name
      - name: Validate spec
        run: |
          openapi-generator-cli validate -i spec.yaml

      # 7. Generate the TS-Axios client (skip validation as a fallback)
      - name: Generate TS-Axios client
        run: |
          openapi-generator-cli generate \
            -i spec.yaml \
            -g typescript-axios \
            -o generated-client \
            --skip-validate-spec

      # 8. Checkout your dedicated client repo
      - name: Checkout client repo
        uses: actions/checkout@v3
        with:
          repository: YOUR_ORG/YOUR_CLIENT_REPO
          token: ${{ secrets.CLIENT_REPO_TOKEN }}
          path: client-repo

      # 9. Sync over the newly generated code
      - name: Sync generated code
        run: |
          rm -rf client-repo/*
          cp -R generated-client/* client-repo/

      # 10. Commit & push back to client repo (only if there are changes)
      - name: Commit and push changes
        run: |
          cd client-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if git diff --quiet; then
            echo "✅ No changes to commit"
          else
            git add .
            git commit -m "chore: regenerate TS-Axios client"
            git push
          fi
